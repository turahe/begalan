name: Bermafa Automated Test

on:
  push:
    branches: [ master, development, feature/** ]
  pull_request:
    branches: [ master ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    services:
      # mysql-service Label used to access the service container
      mysql-service:
        # Docker Hub image (also with version)
        image: mysql:latest
        env:
          ## Accessing to Github secrets, where you can store your configuration
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: db_database
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          check-latest: true
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: imagick, swoole, opcache, intl-68.2, oci8
      - name: Pull all packages
        run: git submodule update --init --recursive
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install
      - name: Generate key
        run: php artisan key:generate
      - name: Generate Assets CSS and js
        run: npm install && npm run production
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: created installed file
        run: printf 'Toko successfully INSTALLED.\n' > storage\installed
      - name: Create Database, Test Migrate and seed database
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: db_database
          DB_PORT: 33306
          DB_USER: root
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
            php artisan migrate --seed
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/php-cs-fixer fix #vendor/bin/phpunit --testdox
